name: Check File Changes

on:
  pull_request:
    branches:
      - main
      - staging
      - release

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for changes in file
        run: |
          git fetch
          CHANGED_FILES="$(git diff origin/main --name-only)"
          ALL_CHANGES="$(git diff origin/main)"
          echo "$ALL_CHANGES"
          EVENT_DATA=$(cat $GITHUB_EVENT_PATH)
          PULL_REQUEST_NUMBER=$(echo $EVENT_DATA | jq .pull_request.number)
          TARGET_BRANCH_NAME=$(echo $EVENT_DATA | jq .pull_request.base.ref)
          echo "$TARGET_BRANCH_NAME"
          API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${PULL_REQUEST_NUMBER}/reviews"
          if [echo "$CHANGED_FILES" | grep -q .env.sample] || [ echo "$ALL_CHANGES" | grep -q System.getenv ]; then
            echo "File has changed"
            if [ "$TARGET_BRANCH_NAME"== "release" ]; then
              BODY="Environment File Changed   PROD akv"
            elif [ "$TARGET_BRANCH_NAME"== "staging" ]; then
              BODY="Environment File Changed   UAT akv"
            else 
              BODY="Environment File Changed   DEV akv"
            fi
          curl -H "Authorization: token ${{secrets.TOKEN_SECRET}}" -X POST -d "{\"body\":\"$BODY\",\"event\":\"COMMENT\"}" $API_URL
          else
            echo "File has not changed"
            echo "CHANGED=false" >> $GITHUB_ENV
          fi
